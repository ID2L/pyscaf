name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (test or production)'
        required: true
        type: string
      pypi_repository_url:
        description: 'PyPI repository URL'
        required: false
        type: string
        default: 'https://upload.pypi.org/legacy/'
    secrets:
      PYPI_PASSWORD:
        description: 'PyPI password or token'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for semantic-release

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Release | Semantic Version
        id: release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.1
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Upload | Distribution Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts-${{ inputs.environment }}
          path: dist
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.result == 'success'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: distribution-artifacts-${{ inputs.environment }}
          path: dist

      - name: Publish package distributions to ${{ inputs.environment }} PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          repository-url: ${{ inputs.pypi_repository_url }}
          packages-dir: dist
          print-hash: true
          verbose: true 